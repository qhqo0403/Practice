// 삽입 정렬(insertion sort) : 부분적으로 정렬된 배열 요소 값들을 비교하여 한번에 하나의 항목을 삽입하는 정렬 방법
// 첫 번째 요소는 정렬된 배열로 간주하고 그 다음 항목과 비교해서 올바른 위치에 삽입. 계속 다음 항목을 취하고 정렬된 배열의 각 요소들과 값을 비교하여 또 삽입!
// 버블, 선택과 마찬가지로 반복문이 중첩되어 있기 때문에 O(n²).
// 버블, 선택 정렬과 다르게 데이터가 어느정도 정렬되어있는 상황에서 쓰기에는 더 적합할 수 있음.
// 실시간으로 데이터가 들어오고, 정렬해야하는 경우에도 적합함! -> 위치 찾아서 삽입만 해주면 되기 때문


function insertionSort(arr){
	var currentVal;
    for(var i = 1; i < arr.length; i++) { // 1부터 시작하는 이유는 배열의 첫번 째 요소를 정렬된 요소로 간주하기 때문
        currentVal = arr[i];
        for(var j = i - 1; j >= 0 && arr[j] > currentVal; j--) { // i 번째 이하의 요소들과 비교해야하기 때문에 i - 1, arr[j]가 currentVal 보다 클 때만 반복문 실행
            arr[j + 1] = arr[j] // arr[j] 가 currentVal 보다 크면 한 칸 앞(오른쪽)으로 이동
        }
        arr[j + 1] = currentVal; // 올바른 위치에 값을 옮겨줌
    }
    return arr;
}
// let 으로 하면 안되서 var를 쓰긴했지만.....