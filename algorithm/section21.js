// 트리 (Trees) : 연결 리스트와 같이 노드로 이루어져있고, 노드들간의 부모-자식 관계가 있음.
// 노드는 0개 또는 1개 또는 그 이상의 노드와 연결될 수 있음
// 연결 리스트는 선형구조, 트리는 비선형 구조
// 가장 최상위의 노드를 루트(root)라고 부르고 하나의 트리에는 하나의 루트만 존재하고, 자식들은 루트로부터 멀어지는 방향으로 저장
// 부모 노드들은 형제노드(같은 부모를 가진 노드)를 가리킬 수 없음. 
// 자식이 없는 마지막 노드를 리프(leaf)라고 함. 그러니까 마지막 자식이자 리프!
// HTML DOM Tree, 네트워크 라우팅, JSON 데이터, 컴퓨터의 폴더구조, 인공지능 등 트리는 많이 사용되는 구조!

// 이진 트리 (Binary tree) : 노드가 최대 2개의 자식 노드를 가져야 함
// 이진 트리는 트리의 특정한 형태이고, 이진 검색 트리는 이진 트리의 특정한 형태

// 이진 검색 트리 (Binary search tree) : 노드의 데이터를 특정한 순서대로 저장함. 노드들을 비교하여 정렬할 기준이 필요
// 부모 노드의 왼쪽에 있는 자식노드는 항상 부모노드 보다 작고 오른쪽에 있는 자식노드는 부모노드보다 큼