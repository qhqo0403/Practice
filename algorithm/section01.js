// Big O Notation (빅오 표기법) : 여러 코드들의 성능을 평가하는 방법

// 숫자를 입력받고 1 에서부터 입력받은 숫자사이의 모든 숫자를 더하는 함수
const addUpTo = n => {
  let total = 0;
  for (let i = 1; i <= n; i++) {
    total += i;
  };
  return total;
};

// 다른 방식
const addUpTo2 = n => {
  return n * (n - 1) / 2;
};

/*
performance.now() 메서드를 이용해서 두 함수의 실행 시간을 비교해서 더 빠른 함수를 찾아 낼 수 있음
performance.now -> 브라우저 안에서 문서가 열리는데 걸리는 시간
const t1 = performance.now() // 함수가 실행되기 전 문서가 열리는 데에 소요된 시간을 변수에 담고
addUpTo(6); // 함수를 실행
const t2 = performance.now(); // 새로운 변수에 문서가 열려있는 시간을 할당
console.log((t1 - t2) * 1000); // 함수를 실행하는데에 걸리는 시간을 구할 수 있음, 초단위로 변환하기 위해서 *1000
// 실행 결과를 비교해보면 addUpTo2 가 속도가 더 빠름


performance.now 를 이용해서 함수의 실행시간을 비교하는 것은 절대적인 수치가 아님
-> 기기마다 다른 방식으로 시간을 기록할 수도 있고 사양 등에 따라서 달라질 수 있기 때문
-> 너무 빠른 실행 시간은 측정할 수가 없어서 비교할 수가 없다
-> 함수마다 이런식으로 평가 해주는 것이 번거로움(심지어 비교해야할 함수가 많다면?)
-> 이런 상황을 위해서 빅오표기법이 존재하는 것!
*/
